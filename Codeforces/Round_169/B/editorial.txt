QUESTÃO
	Dada uma palavra e dois jogadores jogando em turnos, caso jogador da vez consiga rearranjar as letras da palavra de forma a construir um palíndromo,
	ele ganha, caso contrário ele remove uma das letras da palavra. Considerando que o primeiro turno é do primeiro jogador, imprima quem sairá vitorioso.

SOLUÇÃO

O primeiro passo é tentar imaginar que a construção de um palíndromo está totalmente relacionada com o número de ocorrências das letras.

Imaginemos o seguinte caso:

1) aba.
   Como podemos perceber, o número de ocorrências da letra 'a' é igual a 2, que é par e o de 'b' é igual a 1, que é impar.
2) abba.
   Nesse caso, o número de ocorrências da letra 'a' é par e o de 'b', também.

Podemos chegar a conclusão de que, quando o número de ocorrências de uma letra é par, podemos tentar construir um palíndromo de maneira ótima, colocando
essas letras justamente no começo e no final da palavra. EX: Se eu tenho ocorrência par da letra 'a' e 'b', posso tentar construir:

1) abba, aabbaa, baab, bbaabb.

Porém, há o caso quando o número de ocorrências de uma letra é impar. Nesse caso, podemos tentar observar o seguinte fato:

- Se o número de letras com ocorrência ímpar é igual a 0, significa que o número total de letras da é par e o resto das letras tem ocorrência par.
  Dessa forma, o vencedor sempre é o primeiro jogador, pois ele pode certamente construir um palíndromo com esse arranjo.
EX: abba, aabbaa.

- Se o número de letras com ocorrência ímpar é igual a 1, significa que o número total de letras da palavra é impar e o resto das letras tem ocorrência par.
  Assim sendo, o vencedor sempre é o primeiro jogador, pois ele pode rearranjar as letras, de forma que ele coloque as letras com ocorrência par no começo e no final, tal como visto anteriormente, e a única letra com ocorrência ímpar bem no meio. Então ele sempre conseguirá formar um palíndromo.
EX: aba, aabaa, a.

- Se o número de letras com ocorrência ímpar é igual a 2, significa que o número total de letras da palavra é par e o resto das letras tem ocorrência par.
  Nesse caso, podemos imaginar como uma palavra sendo construída de forma a colocar as letras com ocorrência ímpar bem no meio.
  Dessa forma, o primeiro jogador não pode criar um palíndromo logo de cara. Ele pode ou remover uma das letras com ocorrência ímpar, o que significa que o segundo jogador irá ganhar, ou ele pode remover uma das letras com ocorrência par. Porém nessa segunda opção, o número de letras restante seria ímpar e estaria na vez do segundo jogador, o que acarretaria no fato do segundo jogador conseguir ser o jogador da vez, quando sobrar somente uma única letra.
  Então o segundo jogador sempre irá ganhar.
EX: abca, aabcaa.

A partir disso, podemos tentar ver que se o número de ocorrências de uma letra é maior que 1 e for par, o jogador 2 sempre irá ganhar e se for ímpar, o primeiro jogador irá ganhar.

A solução então consiste em atravessar a string fornecida e gravar o número de ocorrência de cada letra. Após isso, verificar a quantidade de letras com ocorrência ímpar e utilizar a lógica acima.

Complexidade: O(|S|), onde |S| é o tamanho da string fornecida.
